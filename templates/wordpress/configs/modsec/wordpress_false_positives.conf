# WordPress tuning for ModSecurity CRS
SecAction "id:9005000,phase:1,nolog,pass,t:none,setvar:'tx.crs_exclusions_wordpress=1'"

# Extend allowed content types for WordPress REST API, uploads, and AJAX requests
# WordPress uses various content types including JSON for REST API, multipart for media uploads,
# and XML for legacy XML-RPC. This rule ensures legitimate WordPress functionality isn't blocked.
SecAction \
         "id:900220,\
          phase:1,\
          nolog,\
          pass,\
          t:none,\
          setvar:'tx.allowed_request_content_type=|application/x-www-form-urlencoded| |multipart/form-data| |multipart/related| |text/xml| |application/xml| |application/soap+xml| |application/x-amf| |application/json| |application/cloudevents+json| |application/cloudevents-batch+json| |application/octet-stream| |application/csp-report| |application/xss-auditor-report| |text/plain| |application/x-git-upload-pack-request| |application/x-git-receive-pack-request|'"

# Allow WordPress heartbeat and admin-ajax endpoints used by the dashboard
SecRule REQUEST_URI "@beginsWith /wp-admin/admin-ajax.php" "id:9005001,phase:2,pass,nolog,ctl:ruleRemoveTargetById=941130;ctl:ruleRemoveTargetById=942200"
SecRule REQUEST_URI "@beginsWith /wp-admin/admin-ajax.php" "id:9005002,phase:2,pass,nolog,ctl:ruleRemoveTargetById=942440;ctl:ruleRemoveTargetById=942450"

# Permit XML-RPC pingbacks if explicitly enabled downstream
SecRule REQUEST_URI "@beginsWith /xmlrpc.php" "id:9005003,phase:2,pass,nolog,ctl:ruleRemoveTargetById=949110;ctl:ruleRemoveTargetById=949120"
